<?php

    date_default_timezone_set("Europe/Athens");

    /**
     * Creates a file header based on given information.
     * @param $dbName (String)
     * @param $fileName (String)
     * @param $tableName (String)
     * @param $description (String)
     * @return string
     */
    function getGeneratorHeader($dbName, $fileName, $tableName, $description) {

        if ($description == "") $description = "N/A";

        $outputString = "
/**********************************************************************************/
/*** THIS FILE HAS BEEN AUTOMATICALLY GENERATED BY THE PANICKAPPS API GENERATOR ***/\r\n
/*                It is HIGHLY suggested that you do not edit this file.          */\r\n
/* DATABASE:\t\t" . $dbName . " */
/* FILE:\t\t" . $fileName . " */
/* TABLE:\t\t" . $tableName . " */
/* DATETIME:\t\t" . date("Y-m-d h:i:sa", time()) . " */
/* DESCRIPTION:\t\t" . $description . "*/\r\n
/**********************************************************************************/
			\r\n\r\n\r\n";

        return $outputString;
    }//end getGeneratorHeader()

    /**
     * Creates a file header based on given information.
     * @param $dbName (String)
     * @param $fileName (String)
     * @param $description (String)
     * @return string
     */
    function getGeneratorHeaderNoTable($dbName, $fileName, $description) {

        if ($description == "") $description = "N/A";

        $outputString = "
/**********************************************************************************/
/*** THIS FILE HAS BEEN AUTOMATICALLY GENERATED BY THE PANICKAPPS API GENERATOR ***/\r\n
/*                It is HIGHLY suggested that you do not edit this file.          */\r\n
/* DATABASE:\t\t" . $dbName . " */
/* FILE:\t\t" . $fileName . " */
/* DATETIME:\t\t" . date("Y-m-d h:i:sa", time()) . " */
/* DESCRIPTION:\t\t" . $description . "*/\r\n
/**********************************************************************************/
            \r\n\r\n\r\n";

        return $outputString;
    }//end getGeneratorHeader()



    /**
* Writes a given string of text into a given PHP file in a given filepath.
     * @param $filePath (String)
     * @param $fileName (String)
     * @param $text (String)
     */
    function writeToPHPFile($filePath, $fileName, $text) {
        if (!is_dir($filePath)) mkdir( $filePath, 0777, true );
        $file = fopen($filePath . $fileName, "w") or die("Unable to open file!");
        fwrite($file, "<?php\r\n\r\n" . $text . "\r\n\r\n?>");
        fclose($file);
    }//end writeToPHPFile()

    /**
     * Writes a given string of text into a given PHP file in a given filepath.
     * @param $filePath (String)
     * @param $fileName (String)
     * @param $text (String)
     */
    function writeToJavaFile($filePath, $fileName, $text) {
        if (!is_dir($filePath)) mkdir( $filePath, 0777, true );
        $file = fopen($filePath . $fileName, "w") or die("Unable to open file!");
        fwrite($file, "\r\n\r\n" . $text . "\r\n\r\n");
        fclose($file);
    }//end writeToJavaFile()


/**
 * @param $dbHostIP
 * @param $dbUsername
 * @param $dbPassword
 * @param $dbName
 * @return int
 */
    function createNewDatabase($dbHostIP, $dbUsername, $dbPassword, $dbName) {
        if (is_file("../Generated/Scripts/DBLogin.php")) {

            $conn = new mysqli($dbHostIP, $dbUsername, $dbPassword);
            if ($conn->connect_error) die("Connection failed: " . $conn->connect_error);

            $sql = "CREATE DATABASE " . $dbName;
            if ($conn->query($sql) === TRUE) {

                $conn2 = new mysqli($dbHostIP, $dbUsername, $dbPassword, $dbName);
                if ($conn2->connect_error) die("Connection failed: " . $conn2->connect_error);

                $sqlCreateTableUsers = "CREATE TABLE Users (
                  UserID INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
                  Username VARCHAR(100) NOT NULL UNIQUE,
                  Password VARCHAR(255) NOT NULL,
                  UserLevelID INT UNSIGNED
                )";

                $sqlCreateTableUserLevels = "CREATE TABLE UserLevels (
                  UserLevelID INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
                  UserLevelName VARCHAR(255) NOT NULL
                )";

                $sqlInsertDefaultUserLevels = "INSERT INTO UserLevels (UserLevelName) VALUES (\"Administrator\"), (\"Manager\"), (\"User\");";
                $sqlCreateTableSession = "CREATE TABLE Sessions (
                  SessionID VARCHAR(255) NOT NULL PRIMARY KEY,
                  UserID INT UNSIGNED NOT NULL,
                  InitiatedOn INT UNSIGNED NOT NULL,
                  FinalizedOn INT UNSIGNED
                )";

                if ($conn2->query($sqlCreateTableUsers) === TRUE &&
                    $conn2->query($sqlCreateTableUserLevels) === TRUE &&
                    $conn2->query($sqlInsertDefaultUserLevels) === TRUE &&
                    $conn2->query($sqlCreateTableSession) === TRUE) {

                    $conn2->close();
                    return 1;
                }

                else {
                    $conn2->close();
                    return 2;
                }
            }
            else {
                $conn->close();
                return 2;
            }
        }
        else return 3;
    }//end createNewDatabase()



?>